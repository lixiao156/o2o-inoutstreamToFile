<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1" metadata-complete="true">

    <!-- 如果是用mvn命令生成的xml，需要修改servlet版本为3.1 -->
    <welcome-file-list>
        <welcome-file>first.jsp</welcome-file>
    </welcome-file-list>
    <servlet>
        <servlet-name>Kaptcha</servlet-name>
        <!--  KaptchaServlet这个类是用来相应servlet的请求的-->
        <servlet-class>com.google.code.kaptcha.servlet.KaptchaServlet</servlet-class>
        <!--  定义Kaptcha的样式 是否有边框-->
        <init-param>
            <!--  定义一个名字？-->
            <param-name>kaptcha.border</param-name>
            <!--  没有边框-->
            <param-value>no</param-value>
        </init-param>
        <!--  字体颜色-->
        <init-param>
            <param-name>kaptcha.textproducer.font.color</param-name>
            <param-value>red</param-value>
        </init-param>
        <!--  图片的宽度-->
        <init-param>
            <param-name>kaptcha.image.width</param-name>
            <param-value>135</param-value>
        </init-param>
        <!--  使用那些字符作为生成验证码-->
        <init-param>
            <param-name>kaptcha.textproducer.char.string</param-name>
            <param-value>ACDEFGHIJKLM456789</param-value>
        </init-param>
        <!--  图片高度-->
        <init-param>
            <param-name>kaptcha.image.height</param-name>
            <param-value>50</param-value>
        </init-param>
        <!--  字体的大小-->
        <init-param>
            <param-name>kaptcha.textproducer.font.size</param-name>
            <param-value>43</param-value>
        </init-param>
        <!--  添加干扰线颜色-->
        <init-param>
            <param-name>kaptcha.noise.color</param-name>
            <param-value>black</param-value>
        </init-param>
        <!--  验证码字符的个数-->
        <init-param>
            <param-name>kaptcha.textproducer.char.length</param-name>
            <param-value>4</param-value>
        </init-param>
        <!--  指定验证码的字体-->
        <init-param>
            <param-name>kaptcha.textproducer.font.names</param-name>
            <param-value>Arial</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>Kaptcha</servlet-name>
        <url-pattern>/Kaptcha</url-pattern>
    </servlet-mapping>
    <!--<filter>-->
        <!--<filter-name>setEncoding</filter-name>-->
        <!--<filter-class>com.dinner.filter.CharsetFilters</filter-class>-->
        <!--<init-param>-->
            <!--<param-name>coding</param-name>-->
            <!--<param-value>UTF-8</param-value>-->
        <!--</init-param>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
        <!--<filter-name>setEncoding</filter-name>-->
        <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->
    <servlet>
        <servlet-name>spring-dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <!--  这样配置是为了spring文件能让service也能扫描到 spring-dao中的dataSources-->
            <param-value>classpath:spring/spring-*xml</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>spring-dispatcher</servlet-name>
        <!--  设置匹配规则 默认的url请求都会到DispachterServlet中处理-->
        <url-pattern>/</url-pattern>
    </servlet-mapping>
</web-app>